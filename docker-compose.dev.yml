# Configuración para desarrollo local
networks:
  app-network:
    name: app-network

services:
  # Servicio principal de la aplicación
  app:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DOCKER_SOCKET=/var/run/docker.sock
      - PORT=3000
      # Configuración para usar el Nginx del contenedor
      - NPM_API=http://host.docker.internal:81/api
      - NPM_API_KEY=3299djk23299djk23
      - NPM_EMAIL=sincrosav@gmail.com
      - NPM_PASSWORD=sincros2808
      - DATABASE_URL=file:./prisma/dev.db
      - NEXT_PUBLIC_DATABASE_DOMAIN=marceloremeseiro.com
      - NEXT_PUBLIC_CENTRAL_SERVER=localhost
      - DEFAULT_CLIENT_SERVER=http://localhost:3001
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
      - /app/node_modules
      - ./prisma/dev.db:/app/prisma/dev.db
    command: >
      sh -c "
        npm install &&
        mkdir -p /app/prisma &&
        npx prisma generate &&
        npx prisma migrate dev &&
        echo 'Esperando a que nginx-proxy-manager esté listo...' &&
        sleep 15 &&
        npm run dev
      "
    networks:
      - app-network
    depends_on:
      - nginx-proxy-manager
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Nginx Proxy Manager para desarrollo
  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
      - '81:81'
    environment:
      DB_SQLITE_FILE: "/data/database.sqlite"
    volumes:
      - ./data/nginx-proxy-manager:/data
      - ./data/letsencrypt:/etc/letsencrypt
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:81" , "||", "exit", "0"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 60s 