# Eliminar la línea de 'version' y asegurar la configuración de redes
networks:
  app-network:
    name: app-network

services:
  # Servicio principal de la aplicación
  app:
    build: .
    ports:
      - "1001:1001"
    environment:
      - NODE_ENV=production
      - NPM_API_KEY=3299djk23299djk23
      - DOCKER_SOCKET=/var/run/docker.sock
      - NPM_EMAIL=sincrosav@gmail.com
      - PORT=1001
      - NPM_API=http://nginx-proxy-manager:81/api
      - NPM_PASSWORD=sincros2808
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
      - /app/node_modules
    command: >
      sh -c "
        npm install --production=false &&
        npx prisma generate &&
        npx prisma migrate deploy &&
        npm run build &&
        npm run start
      "
    depends_on:
      nginx-proxy-manager:
        condition: service_healthy
    networks:
      - app-network

  # Nginx Proxy Manager
  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
      - '81:81'
    environment:
      DB_SQLITE_FILE: "/data/database.sqlite"
    volumes:
      - ./data/nginx-proxy-manager:/data
      - ./data/letsencrypt:/etc/letsencrypt
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:81/api"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

