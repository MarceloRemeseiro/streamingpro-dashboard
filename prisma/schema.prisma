// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Device {
  id            String         @id @default(uuid())
  deviceId      String         @unique
  type          DeviceType
  arch          String
  os            String
  localIp       String
  publicIp      String
  capabilities  Json
  lastSeen      DateTime
  createdAt     DateTime       @default(now())
  configs       DeviceConfig[]
}

model DeviceConfig {
  id           String   @id @default(uuid())
  deviceId     String
  device       Device   @relation(fields: [deviceId], references: [id])
  clientServer String
  srtUrl       String?
  updatedAt    DateTime @default(now())
}

model StreamUrl {
  id        String    @id @default(uuid())
  name      String
  url       String
  startDate DateTime
  endDate   DateTime
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum DeviceType {
  RASPBERRY
  LINUX_PC
}

enum DatabaseType {
  POSTGRES
  MYSQL
  MONGODB
  REDIS
}

enum InstanceStatus {
  RUNNING
  STOPPED
  ERROR
}

model DatabaseInstance {
  id             String         @id @default(uuid())
  name           String
  dbType         DatabaseType
  subdomain      String         @unique
  containerId    String         @unique
  connectionUrl  String
  status         InstanceStatus @default(STOPPED)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  sslEnabled     Boolean        @default(true)
  portMappings   Json
  environment    Json
  volumes        String?
}
